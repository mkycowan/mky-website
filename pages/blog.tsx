import React, { Fragment, useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";

import { Categories, ArticleMeta } from "utils/types";
import { getBlogPosts } from "@utils/content";

import { ArticleFilter } from "@components/article-filter";

interface HomePageProps {
  articles: Array<ArticleMeta>;
}

const Home = ({ articles }: HomePageProps) => {
  const [filteredArticles, setFilteredArticles] = useState(articles);
  const [selectedCategory, setSelectedCategory] = useState(Categories[0]);

  useEffect(() => {
    if (selectedCategory === "all") {
      setFilteredArticles([...articles]);
    } else {
      const articlesFilteredByCategory = articles.filter(
        (article) => article.category === selectedCategory,
      );
      setFilteredArticles([...articlesFilteredByCategory]);
    }
    // return () => {
    //   second
    // }
  }, [articles, selectedCategory]);

  return (
    <Fragment>
      <Head>
        <title>Mikey - Software Engineer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="flex flex-col items-start md:flex-row md:items-end justify-between">
          <div className="mb-4 md:pr-8">
            <h2 className="text-2xl md:text-3xl lg:text-4xl">
              The Backlog ---
            </h2>
            <p className="mt-4 text-zinc-500">
              The backlog is where I explore technologies and engineering topics
              I should know but don&apos;t.
            </p>
          </div>
          <div className="w-full md:w-auto mb-5">
            <div className="hidden md:block">
              <ArticleFilter
                selectCategory={setSelectedCategory}
                selectedCategory={selectedCategory}
              />
            </div>
            <div className="md:hidden">
              <select className="mt-1 block w-full py-2 px-3 border border-gray-300 bg-black/25 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                {Categories.map((category) => (
                  <option key={category}>{category}</option>
                ))}
              </select>
            </div>
          </div>
        </div>
        {/* Articles */}
        {filteredArticles.map((article, index) => (
          <Link
            href={`/blog/${article.slug}`}
            passHref
            key={article.slug || index}
          >
            <a className="block mb-4">{article?.title || ""}</a>
          </Link>
        ))}
      </main>
    </Fragment>
  );
};

export async function getStaticProps() {
  const articles = await getBlogPosts({ limit: 0 });
  return {
    props: {
      articles: articles,
    },
  };
}

export default Home;
